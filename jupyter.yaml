AWSTemplateFormatVersion: 2010-09-09
Description:
   This template creates an VPC and add an EC2 instance with an Elastic IP
   and security group. The EC2 instance will be set to run Jupyter notebook.
Metadata:
  'AWS::CloudFormation::Designer':
    fdf89459-a065-46d5-b39a-28b9120833a8:
      size:
        width: 580
        height: 410
      position:
        x: 380
        'y': 60
      z: 0
      embeds:
        - d5fc1dc5-4c2e-4844-aaef-ed23f5bacaed
        - c3ba209f-6c8f-44a7-bfc0-0c78f39454fe
        - d5f77210-5d56-4d1c-a0f8-6bc959d2019d
    cab0f608-022e-4149-9cd3-d8f40168ceba:
      size:
        width: 60
        height: 60
      position:
        x: 210
        'y': 200
      z: 0
      embeds: []
    c3ba209f-6c8f-44a7-bfc0-0c78f39454fe:
      size:
        width: 140
        height: 140
      position:
        x: 430
        'y': 170
      z: 1
      parent: fdf89459-a065-46d5-b39a-28b9120833a8
      embeds:
        - 661a8fc2-aa4a-4861-acb3-a5b9e3faca26
      iscontainedinside:
        - fdf89459-a065-46d5-b39a-28b9120833a8
        - fdf89459-a065-46d5-b39a-28b9120833a8
        - fdf89459-a065-46d5-b39a-28b9120833a8
        - fdf89459-a065-46d5-b39a-28b9120833a8
        - fdf89459-a065-46d5-b39a-28b9120833a8
        - fdf89459-a065-46d5-b39a-28b9120833a8
        - fdf89459-a065-46d5-b39a-28b9120833a8
        - fdf89459-a065-46d5-b39a-28b9120833a8
        - fdf89459-a065-46d5-b39a-28b9120833a8
        - fdf89459-a065-46d5-b39a-28b9120833a8
        - fdf89459-a065-46d5-b39a-28b9120833a8
        - fdf89459-a065-46d5-b39a-28b9120833a8
    661a8fc2-aa4a-4861-acb3-a5b9e3faca26:
      size:
        width: 60
        height: 60
      position:
        x: 470
        'y': 210
      z: 2
      parent: c3ba209f-6c8f-44a7-bfc0-0c78f39454fe
      embeds: []
      iscontainedinside:
        - c3ba209f-6c8f-44a7-bfc0-0c78f39454fe
        - c3ba209f-6c8f-44a7-bfc0-0c78f39454fe
        - c3ba209f-6c8f-44a7-bfc0-0c78f39454fe
        - c3ba209f-6c8f-44a7-bfc0-0c78f39454fe
        - c3ba209f-6c8f-44a7-bfc0-0c78f39454fe
        - c3ba209f-6c8f-44a7-bfc0-0c78f39454fe
        - c3ba209f-6c8f-44a7-bfc0-0c78f39454fe
        - c3ba209f-6c8f-44a7-bfc0-0c78f39454fe
        - c3ba209f-6c8f-44a7-bfc0-0c78f39454fe
        - c3ba209f-6c8f-44a7-bfc0-0c78f39454fe
        - c3ba209f-6c8f-44a7-bfc0-0c78f39454fe
      dependson:
        - cab0f608-022e-4149-9cd3-d8f40168ceba
    d5f77210-5d56-4d1c-a0f8-6bc959d2019d:
      size:
        width: 260
        height: 210
      position:
        x: 630
        'y': 140
      z: 1
      parent: fdf89459-a065-46d5-b39a-28b9120833a8
      embeds:
        - 9c87ef2f-60fa-4448-bdf6-250be82cb5cb
      iscontainedinside:
        - fdf89459-a065-46d5-b39a-28b9120833a8
        - fdf89459-a065-46d5-b39a-28b9120833a8
        - fdf89459-a065-46d5-b39a-28b9120833a8
        - fdf89459-a065-46d5-b39a-28b9120833a8
        - fdf89459-a065-46d5-b39a-28b9120833a8
        - fdf89459-a065-46d5-b39a-28b9120833a8
        - fdf89459-a065-46d5-b39a-28b9120833a8
        - fdf89459-a065-46d5-b39a-28b9120833a8
        - fdf89459-a065-46d5-b39a-28b9120833a8
      dependson:
        - 661a8fc2-aa4a-4861-acb3-a5b9e3faca26
    2168a5b7-0b2e-4162-994f-316302f52b1b:
      source:
        id: fdf89459-a065-46d5-b39a-28b9120833a8
      target:
        id: cab0f608-022e-4149-9cd3-d8f40168ceba
      z: 0
    cfcb0113-985e-464f-86b9-20e9d27bea28:
      source:
        id: c3ba209f-6c8f-44a7-bfc0-0c78f39454fe
      target:
        id: d5f77210-5d56-4d1c-a0f8-6bc959d2019d
      z: 1
    9c87ef2f-60fa-4448-bdf6-250be82cb5cb:
      size:
        width: 60
        height: 60
      position:
        x: 750
        'y': 210
      z: 2
      parent: d5f77210-5d56-4d1c-a0f8-6bc959d2019d
      embeds: []
      isassociatedwith:
        - d5fc1dc5-4c2e-4844-aaef-ed23f5bacaed
      iscontainedinside:
        - d5f77210-5d56-4d1c-a0f8-6bc959d2019d
        - d5f77210-5d56-4d1c-a0f8-6bc959d2019d
        - d5f77210-5d56-4d1c-a0f8-6bc959d2019d
        - d5f77210-5d56-4d1c-a0f8-6bc959d2019d
    d5fc1dc5-4c2e-4844-aaef-ed23f5bacaed:
      size:
        width: 60
        height: 60
      position:
        x: 750
        'y': 390
      z: 1
      parent: fdf89459-a065-46d5-b39a-28b9120833a8
      embeds: []
      iscontainedinside:
        - fdf89459-a065-46d5-b39a-28b9120833a8
        - fdf89459-a065-46d5-b39a-28b9120833a8
        - fdf89459-a065-46d5-b39a-28b9120833a8
Parameters:
  InstanceType:
    Description: Jupyter instance type
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - t2.xlarge
      - t2.2xlarge
      - t3.nano
      - t3.micro
      - t3.small
      - t3.medium
      - t3.large
      - t3.xlarge
      - t3.2xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.9xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - r4.large
      - r4.xlarge
      - r4.2xlarge
      - i3.large
      - i3.xlarge
      - i3.2xlarge
    ConstraintDescription: must be a valid EC2 instance type.
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance.
    Type: 'AWS::EC2::KeyPair::KeyName'
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  SSHLocation:
    Description: 'The IP address range that can be used access the web server using SSH.'
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  NotebookPassword:
    Description: 'Password to access the Jupyter notebook (Default: 123123)'
    Type: String
    Default: 123123
    NoEcho: true
  EBSSize:
    Description: 'Size of the volume in GB'
    Type: String
    Default: '20'
    AllowedPattern: '[0-9]*'
Mappings:
  AWSInstanceType2Arch:
    t1.micro:
      Arch: PV64
    t2.micro:
      Arch: HVM64
    t2.small:
      Arch: HVM64
    t2.medium:
      Arch: HVM64
    m1.small:
      Arch: PV64
    m1.medium:
      Arch: PV64
    m1.large:
      Arch: PV64
    m1.xlarge:
      Arch: PV64
    m2.xlarge:
      Arch: PV64
    m2.2xlarge:
      Arch: PV64
    m2.4xlarge:
      Arch: PV64
    m3.medium:
      Arch: HVM64
    m3.large:
      Arch: HVM64
    m3.xlarge:
      Arch: HVM64
    m3.2xlarge:
      Arch: HVM64
    c1.medium:
      Arch: PV64
    c1.xlarge:
      Arch: PV64
    c3.large:
      Arch: HVM64
    c3.xlarge:
      Arch: HVM64
    c3.2xlarge:
      Arch: HVM64
    c3.4xlarge:
      Arch: HVM64
    c3.8xlarge:
      Arch: HVM64
    c4.large:
      Arch: HVM64
    c4.xlarge:
      Arch: HVM64
    c4.2xlarge:
      Arch: HVM64
    c4.4xlarge:
      Arch: HVM64
    c4.8xlarge:
      Arch: HVM64
    g2.2xlarge:
      Arch: HVMG2
    r3.large:
      Arch: HVM64
    r3.xlarge:
      Arch: HVM64
    r3.2xlarge:
      Arch: HVM64
    r3.4xlarge:
      Arch: HVM64
    r3.8xlarge:
      Arch: HVM64
    i2.xlarge:
      Arch: HVM64
    i2.2xlarge:
      Arch: HVM64
    i2.4xlarge:
      Arch: HVM64
    i2.8xlarge:
      Arch: HVM64
    d2.xlarge:
      Arch: HVM64
    d2.2xlarge:
      Arch: HVM64
    d2.4xlarge:
      Arch: HVM64
    d2.8xlarge:
      Arch: HVM64
    hi1.4xlarge:
      Arch: HVM64
    hs1.8xlarge:
      Arch: HVM64
    cr1.8xlarge:
      Arch: HVM64
    cc2.8xlarge:
      Arch: HVM64
  AWSRegionArch2AMI:
    us-east-1:
      PV64: ami-1ccae774
      HVM64: ami-1ecae776
      HVMG2: ami-8c6b40e4
    us-west-2:
      PV64: ami-ff527ecf
      HVM64: ami-e7527ed7
      HVMG2: ami-abbe919b
    us-west-1:
      PV64: ami-d514f291
      HVM64: ami-d114f295
      HVMG2: ami-f31ffeb7
    eu-west-1:
      PV64: ami-bf0897c8
      HVM64: ami-a10897d6
      HVMG2: ami-d5bc24a2
    eu-central-1:
      PV64: ami-ac221fb1
      HVM64: ami-a8221fb5
      HVMG2: ami-7cd2ef61
    ap-northeast-1:
      PV64: ami-27f90e27
      HVM64: ami-cbf90ecb
      HVMG2: ami-6318e863
    ap-southeast-1:
      PV64: ami-acd9e8fe
      HVM64: ami-68d8e93a
      HVMG2: ami-3807376a
    ap-southeast-2:
      PV64: ami-ff9cecc5
      HVM64: ami-fd9cecc7
      HVMG2: ami-89790ab3
    sa-east-1:
      PV64: ami-bb2890a6
      HVM64: ami-b52890a8
      HVMG2: NOT_SUPPORTED
    cn-north-1:
      PV64: ami-fa39abc3
      HVM64: ami-f239abcb
      HVMG2: NOT_SUPPORTED
Resources:
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      CidrBlock: 10.0.0.0/16
    Metadata:
      'AWS::CloudFormation::Designer':
        id: fdf89459-a065-46d5-b39a-28b9120833a8
  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties: {}
    Metadata:
      'AWS::CloudFormation::Designer':
        id: cab0f608-022e-4149-9cd3-d8f40168ceba
  PublicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
    Metadata:
      'AWS::CloudFormation::Designer':
        id: c3ba209f-6c8f-44a7-bfc0-0c78f39454fe
  PublicRoute:
    Type: 'AWS::EC2::Route'
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      RouteTableId: !Ref PublicRouteTable
      GatewayId: !Ref InternetGateway
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 661a8fc2-aa4a-4861-acb3-a5b9e3faca26
    DependsOn:
      - InternetGateway
  PublicSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.0.0/24
    Metadata:
      'AWS::CloudFormation::Designer':
        id: d5f77210-5d56-4d1c-a0f8-6bc959d2019d
    DependsOn:
      - PublicRoute
  EC2VPCG2NTLR:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 2168a5b7-0b2e-4162-994f-316302f52b1b
  EC2SRTA34524:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet
    Metadata:
      'AWS::CloudFormation::Designer':
        id: cfcb0113-985e-464f-86b9-20e9d27bea28
  JupyterWebServer:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: !Ref InstanceType
      ImageId: !FindInMap [AWSRegionArch2AMI, !Ref 'AWS::Region', !FindInMap [AWSInstanceType2Arch, !Ref InstanceType, Arch]]
      KeyName: !Ref KeyName
      BlockDeviceMappings:
        - DeviceName: '/dev/xvda'
          Ebs:
            VolumeSize: !Ref EBSSize
      NetworkInterfaces:
        - GroupSet:
            - !Ref JupyterSecurityGroup
          AssociatePublicIpAddress: 'true'
          DeviceIndex: '0'
          DeleteOnTermination: 'true'
          SubnetId: !Ref PublicSubnet
      UserData:
        "Fn::Base64":
          !Sub |
            #!/bin/bash
            yum update -y aws-cfn-bootstrap # good practice - always do this.
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource JupyterWebServer --configsets jupyter --region ${AWS::Region}
            yum -y update
            /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource JupyterWebServer --region ${AWS::Region}
    CreationPolicy:
        ResourceSignal:
          Count: "1"
          Timeout: PT20M
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 9c87ef2f-60fa-4448-bdf6-250be82cb5cb
      AWS::CloudFormation::Init:
        configSets:
          jupyter:
            - 'configure_cfn'
            - 'install_nginx'
            - 'install_git'
            - 'install_anaconda'
            - 'configure_jupyter'
            - 'install_packages'
            - 'change_permissions'
        configure_cfn:
          files:
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.EC2.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource JupyterWebServer --configsets jupyter --region ${AWS::Region}
              mode: "000400"
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
                verbose=true
                interval=5
              mode: "000400"
              owner: root
              group: root
          services:
            sysvinit:
              cfn-hup:
                enabled: "true"
                ensureRunning: "true"
                files:
                  - "/etc/cfn/cfn-hup.conf"
                  - "/etc/cfn/hooks.d/cfn-auto-reloader.conf"
        install_nginx:
          packages:
            yum:
              epel-release: []
              nginx: []
          files:
            /etc/nginx/nginx.conf:
              content: !Sub |
                user nginx;
                worker_processes auto;
                error_log /var/log/nginx/error.log;
                pid /var/run/nginx.pid;

                # Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
                include /usr/share/nginx/modules/*.conf;

                events {
                    worker_connections 1024;
                }
                http {
                  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                                    '$status $body_bytes_sent "$http_referer" '
                                    '"$http_user_agent" "$http_x_forwarded_for"';

                  access_log  /var/log/nginx/access.log  main;

                  sendfile            on;
                  tcp_nopush          on;
                  tcp_nodelay         on;
                  keepalive_timeout   65;
                  types_hash_max_size 2048;

                  include             /etc/nginx/mime.types;
                  default_type        application/octet-stream;

                  # Load modular configuration files from the /etc/nginx/conf.d directory.
                  # See http://nginx.org/en/docs/ngx_core_module.html#include
                  # for more information.
                  include /etc/nginx/conf.d/*.conf;

                  map $http_upgrade $connection_upgrade {
                      default upgrade;
                      ''      close;
                  }

                  upstream jupyter {
                      server localhost:8888 fail_timeout=0;
                  }

                  server {
                    listen       80 default_server;
                    listen       [::]:80 default_server;
                    server_name  localhost;

                    location / {
                      proxy_pass http://jupyter;

                      proxy_set_header X-Real-IP $remote_addr;
                      proxy_set_header Host $host;
                      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                    }
                    location ~* /(api/kernels/[^/]+/(channels|iopub|shell|stdin)|terminals/websocket)/? {
                      proxy_pass http://jupyter;

                      proxy_set_header X-Real-IP $remote_addr;
                      proxy_set_header Host $host;
                      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                      # WebSocket support
                      proxy_http_version 1.1;
                      proxy_set_header Upgrade $http_upgrade;
                      proxy_set_header Connection $connection_upgrade;
                    }

                    # redirect server error pages to the static page /40x.html
                    #
                    error_page 404 /404.html;
                        location = /40x.html {
                    }

                    # redirect server error pages to the static page /50x.html
                    #
                    error_page 500 502 503 504 /50x.html;
                        location = /50x.html {
                    }
                  }
                }       
              mode: "000400"
              owner: root
              group: root            
          services:
            sysvinit:
              nginx:
                enable: 'true'
                ensureRunning: 'true'
                files:
                  - '/etc/nginx/nginx.conf'
        install_git:
          packages:
            yum:
              git: []
        install_anaconda:
          commands:
            01_download_anaconda:
              cwd: '/home/ec2-user'
              command: 'wget https://repo.continuum.io/archive/Anaconda3-2018.12-Linux-x86_64.sh'
            02_install_anaconda:
              cwd: '/home/ec2-user'
              command: 'bash Anaconda3-2018.12-Linux-x86_64.sh -b -p /home/ec2-user/anaconda' #install on silent mode
            03_add_path:
              cwd: '/home/ec2-user'
              command: 'echo "source /home/ec2-user/anaconda/etc/profile.d/conda.sh" >> .bashrc'   #'echo export PATH=\"/home/ec2-user/anaconda/bin:$PATH\" >> .bashrc'
            04_add_jupyter_env:
              cwd: '/home/ec2-user'
              command: 'echo "conda activate jupyter" >> .bashrc'
            06_install_python_3_5_6:
              cwd: '/home/ec2-user'
              command: '/home/ec2-user/anaconda/bin/conda create --name jupyter python=3.5.6 anaconda -y'
            07_delete_download_file:
              cwd: '/home/ec2-user'
              command: 'rm -rf Anaconda3-2018.12-Linux-x86_64.sh'
        configure_jupyter:
          files:
            /home/ec2-user/.jupyter/jupyter_notebook_config.py:
              content: !Sub |
                from IPython.lib import passwd
                c = get_config()
                c.NotebookApp.ip = '*'
                password = passwd('${NotebookPassword}')
                c.NotebookApp.password = password  # u'sha1:${NotebookPassword}'
                c.NotebookApp.open_browser = False
                c.NotebookApp.port = 8888
                c.NotebookApp.notebook_dir = '/home/ec2-user/notebooks'
                c.NotebookApp.allow_root = True
                c.NotebookApp.quit_button = False
                c.NotebookApp.allow_password_change = False
            # /home/ec2-user/.jupyter/jupyter_notebook_config.json:
            #   content: !Sub |
            #     {

            #     }
          commands:
            01_source_conda:
              cwd: '/home/ec2-user'
              command: 'source ./.bashrc' #'sudo ln -s /home/ec2-user/anaconda/etc/profile.d/conda.sh /etc/profile.d/conda.sh'
            02_install_jupyter:
              cwd: '/home/ec2-user'
              command: '/home/ec2-user/anaconda/bin/conda install -n jupyter jupyter -y'
            03_create_notebooks_folder:
              cwd: '/home/ec2-user'
              command: 'mkdir notebooks'
        install_packages:
          commands:
            01_install_tensorflow:
              cwd: '/home/ec2-user/'
              command: '/home/ec2-user/anaconda/bin/conda install -n jupyter tensorflow -y'
        change_permissions:
          commands:
            01_change_jupyter:
              cwd: '/home/ec2-user'
              command: 'sudo chown -R ec2-user:ec2-user .jupyter/'
            02_change_notebook:
              cwd: '/home/ec2-user'
              command: 'sudo chown -R ec2-user:ec2-user ./notebooks/'
            03_change_anaconda:
              cwd: '/home/ec2-user'
              command: 'sudo chown -R ec2-user:ec2-user ./anaconda/'    
  JupyterSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Allow access from HTTP and SSH traffic
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: !Ref SSHLocation
    Metadata:
      'AWS::CloudFormation::Designer':
        id: d5fc1dc5-4c2e-4844-aaef-ed23f5bacaed
